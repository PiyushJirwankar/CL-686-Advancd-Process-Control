import numpy as np
import matplotlib.pyplot as plt

start = 0
end = 25
N = 10*(end-start)+1
time  = np.linspace(start, end, N)

Y1_asgn2 = np.loadtxt('Y1_asgn2.csv', delimiter=',')
Y2_asgn2 = np.loadtxt('Y2_asgn2.csv', delimiter=',')
U1_asgn2 = np.loadtxt('U1_asgn2.csv', delimiter=',')
U2_asgn2 = np.loadtxt('U2_asgn2.csv', delimiter=',')

Y1_asgn3 = np.loadtxt('Y1_asgn3.csv', delimiter=',')
Y2_asgn3 = np.loadtxt('Y2_asgn3.csv', delimiter=',')
U1_asgn3 = np.loadtxt('U1_asgn3.csv', delimiter=',')
U2_asgn3 = np.loadtxt('U2_asgn3.csv', delimiter=',')

Y1_mpc = np.loadtxt('Y1_MPC.csv', delimiter=',')
Y2_mpc = np.loadtxt('Y2_MPC.csv', delimiter=',')
U1_mpc = np.loadtxt('U1_MPC.csv', delimiter=',')
U2_mpc = np.loadtxt('U2_MPC.csv', delimiter=',')

Y1_lqg = np.loadtxt('Y1_LQG.csv', delimiter=',')
Y2_lqg = np.loadtxt('Y2_LQG.csv', delimiter=',')
U1_lqg = np.loadtxt('U1_LQG.csv', delimiter=',')
U2_lqg = np.loadtxt('U2_LQG.csv', delimiter=',')

D = np.loadtxt('D_common.csv', delimiter=',')
R1 = np.loadtxt('R1_common.csv',delimiter=',')
R2 = np.loadtxt('R2_common.csv',delimiter=',')

sse1_asgn2 = np.loadtxt('sse1_asgn2.csv')
sse1_asgn3 = np.loadtxt('sse1_asgn3.csv')
sse1_lqg = np.loadtxt('sse1_lqg.csv')
sse1_mpc = np.loadtxt('sse1_mpc.csv')

sse2_asgn2 = np.loadtxt('sse2_asgn2.csv')
sse2_asgn3 = np.loadtxt('sse2_asgn3.csv')
sse2_lqg = np.loadtxt('sse2_lqg.csv')
sse2_mpc = np.loadtxt('sse2_mpc.csv')

ssmv1_asgn2 = np.loadtxt('ssmv1_asgn2.csv')
ssmv1_asgn3 = np.loadtxt('ssmv1_asgn3.csv')
ssmv1_lqg = np.loadtxt('ssmv1_lqg.csv')
ssmv1_mpc = np.loadtxt('ssmv1_mpc.csv')

ssmv2_asgn2 = np.loadtxt('ssmv2_asgn2.csv')
ssmv2_asgn3 = np.loadtxt('ssmv2_asgn3.csv')
ssmv2_lqg = np.loadtxt('ssmv2_lqg.csv')
ssmv2_mpc = np.loadtxt('ssmv2_mpc.csv')


fig, ax = plt.subplots(3,2)
ax[0,0].plot(time, Y1_asgn2,'r')
ax[0,0].plot(time, Y1_asgn3,'b')
ax[0,0].plot(time, Y1_lqg,'g')
ax[0,0].plot(time, Y1_mpc,'k')
ax[0,0].plot(time, R1,'c')
ax[0,0].set_xlabel('Time (sec)')
ax[0,0].set_ylabel('Y(k)')
ax[0,0].legend(['PID', 'PPC', 'LQG', 'MPC', '$R_1(k)$'], fontsize='xx-small')

ax[0,1].plot(time, Y2_asgn2,'r')
ax[0,1].plot(time, Y2_asgn3,'b')
ax[0,1].plot(time, Y2_lqg,'g')
ax[0,1].plot(time, Y2_mpc,'k')
ax[0,1].plot(time, R2,'c')
ax[0,1].set_xlabel('Time (sec)')
ax[0,1].set_ylabel('Y2(k)')
ax[0,1].legend(['PID', 'PPC', 'LQG', 'MPC', '$R_2(k)$'], fontsize='xx-small')

ax[1,0].plot(time[:N-1], U1_asgn2, 'r', drawstyle = 'steps-pre')
ax[1,0].plot(time[:N-1], U1_asgn3, 'b', drawstyle = 'steps-pre')
ax[1,0].plot(time[:N-1], U1_lqg, 'g', drawstyle = 'steps-pre')
ax[1,0].plot(time[:N-1], U1_mpc, 'k', drawstyle = 'steps-pre')
ax[1,0].set_xlabel('Time (sec)')
ax[1,0].set_ylabel('U1(k)')
ax[1,0].legend(['PID', 'PPC', 'LQG', 'MPC'], fontsize='xx-small')

ax[1,1].plot(time[:N-1], U2_asgn2, 'r', drawstyle = 'steps-pre')
ax[1,1].plot(time[:N-1], U2_asgn3, 'b', drawstyle = 'steps-pre')
ax[1,1].plot(time[:N-1], U2_lqg, 'g', drawstyle = 'steps-pre')
ax[1,1].plot(time[:N-1], U2_mpc, 'k', drawstyle = 'steps-pre')
ax[1,1].set_xlabel('Time (sec)')
ax[1,1].set_ylabel('U2(k)')
ax[1,1].legend(['PID', 'PPC', 'LQG', 'MPC'], fontsize='xx-small')

ax[2,0].plot(time, D)
ax[2,0].set_xlabel('Time (sec)')
ax[2,0].set_ylabel('D(k)')

fig.suptitle('CL 686 Project results')

plt.show()

## Kindly enter full screen to best view the plots
## To rerun simulations, kindly delete all existing csv files generated by the codes and run again.